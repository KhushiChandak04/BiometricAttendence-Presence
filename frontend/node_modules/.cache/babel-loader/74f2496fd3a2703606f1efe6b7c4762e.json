{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\BiometricAttendence-Presence\\\\frontend\\\\src\\\\components\\\\QRScanner.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport QrReader from 'react-qr-reader';\nimport { Container, Paper, Typography, CircularProgress } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  paper: {\n    padding: theme.spacing(3),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    width: '100%',\n    maxWidth: '500px'\n  },\n  reader: {\n    width: '100%',\n    maxWidth: '400px',\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2)\n  },\n  message: {\n    marginTop: theme.spacing(2)\n  }\n}));\nconst QRScanner = () => {\n  _s();\n  const classes = useStyles();\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState('');\n  const getCurrentLocation = () => {\n    return new Promise((resolve, reject) => {\n      if (!navigator.geolocation) {\n        reject('Geolocation is not supported');\n      }\n      navigator.geolocation.getCurrentPosition(position => {\n        resolve({\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude\n        });\n      }, error => {\n        reject(error.message);\n      });\n    });\n  };\n  const handleScan = async data => {\n    if (data && !loading) {\n      try {\n        setLoading(true);\n        setMessage('Processing QR code...');\n        const location = await getCurrentLocation();\n        const response = await axios.post('http://localhost:5000/api/attendance/qr', {\n          qr_data: data,\n          location: location\n        });\n        setMessage(response.data.message);\n      } catch (error) {\n        var _error$response, _error$response$data;\n        setMessage(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'An error occurred');\n      } finally {\n        setLoading(false);\n      }\n    }\n  };\n  const handleError = err => {\n    console.error(err);\n    setMessage('Error accessing camera');\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      className: classes.paper,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        children: \"QR Code Attendance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.reader,\n        children: /*#__PURE__*/_jsxDEV(QrReader, {\n          delay: 300,\n          onError: handleError,\n          onScan: handleScan,\n          facingMode: \"environment\",\n          style: {\n            width: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, this), message && /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.message,\n        color: message.includes('error') ? 'error' : 'primary',\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(QRScanner, \"DNQLU0wv05zaK1eo2Xwnu/4Odrw=\", false, function () {\n  return [useStyles];\n});\n_c = QRScanner;\nexport default QRScanner;\nvar _c;\n$RefreshReg$(_c, \"QRScanner\");","map":{"version":3,"names":["React","useState","QrReader","Container","Paper","Typography","CircularProgress","makeStyles","axios","jsxDEV","_jsxDEV","useStyles","theme","root","marginTop","spacing","display","flexDirection","alignItems","paper","padding","width","maxWidth","reader","marginBottom","message","QRScanner","_s","classes","loading","setLoading","setMessage","getCurrentLocation","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","position","latitude","coords","longitude","error","handleScan","data","location","response","post","qr_data","_error$response","_error$response$data","handleError","err","console","className","children","elevation","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","delay","onError","onScan","facingMode","style","color","includes","_c","$RefreshReg$"],"sources":["D:/GitHub/BiometricAttendence-Presence/frontend/src/components/QRScanner.js"],"sourcesContent":["import React, { useState } from 'react';\nimport QrReader from 'react-qr-reader';\nimport { Container, Paper, Typography, CircularProgress } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios from 'axios';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  paper: {\n    padding: theme.spacing(3),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    width: '100%',\n    maxWidth: '500px',\n  },\n  reader: {\n    width: '100%',\n    maxWidth: '400px',\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n  message: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst QRScanner = () => {\n  const classes = useStyles();\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState('');\n\n  const getCurrentLocation = () => {\n    return new Promise((resolve, reject) => {\n      if (!navigator.geolocation) {\n        reject('Geolocation is not supported');\n      }\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          resolve({\n            latitude: position.coords.latitude,\n            longitude: position.coords.longitude,\n          });\n        },\n        (error) => {\n          reject(error.message);\n        }\n      );\n    });\n  };\n\n  const handleScan = async (data) => {\n    if (data && !loading) {\n      try {\n        setLoading(true);\n        setMessage('Processing QR code...');\n\n        const location = await getCurrentLocation();\n\n        const response = await axios.post('http://localhost:5000/api/attendance/qr', {\n          qr_data: data,\n          location: location,\n        });\n\n        setMessage(response.data.message);\n      } catch (error) {\n        setMessage(error.response?.data?.error || 'An error occurred');\n      } finally {\n        setLoading(false);\n      }\n    }\n  };\n\n  const handleError = (err) => {\n    console.error(err);\n    setMessage('Error accessing camera');\n  };\n\n  return (\n    <Container maxWidth=\"sm\" className={classes.root}>\n      <Paper elevation={3} className={classes.paper}>\n        <Typography variant=\"h5\" gutterBottom>\n          QR Code Attendance\n        </Typography>\n\n        <div className={classes.reader}>\n          <QrReader\n            delay={300}\n            onError={handleError}\n            onScan={handleScan}\n            facingMode=\"environment\"\n            style={{ width: '100%' }}\n          />\n        </div>\n\n        {loading && <CircularProgress />}\n        \n        {message && (\n          <Typography \n            className={classes.message}\n            color={message.includes('error') ? 'error' : 'primary'}\n          >\n            {message}\n          </Typography>\n        )}\n      </Paper>\n    </Container>\n  );\n};\n\nexport default QRScanner;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}