{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\BiometricAttendence-Presence\\\\frontend\\\\src\\\\contexts\\\\ThemeContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { createTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ThemeContext = /*#__PURE__*/createContext();\nexport const ThemeContextProvider = ({\n  children\n}) => {\n  _s();\n  const [darkMode, setDarkMode] = useState(() => {\n    const savedMode = localStorage.getItem('darkMode');\n    return savedMode ? JSON.parse(savedMode) : true;\n  });\n  useEffect(() => {\n    localStorage.setItem('darkMode', JSON.stringify(darkMode));\n  }, [darkMode]);\n  const theme = createTheme({\n    palette: {\n      type: darkMode ? 'dark' : 'light',\n      primary: {\n        main: '#2196F3'\n      },\n      secondary: {\n        main: '#1976d2'\n      },\n      background: {\n        default: darkMode ? '#1a1a2e' : '#e3f2fd',\n        paper: darkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(255, 255, 255, 0.9)'\n      }\n    },\n    typography: {\n      fontFamily: \"'Roboto', 'Orbitron', sans-serif\"\n    },\n    overrides: {\n      MuiCssBaseline: {\n        '@global': {\n          '@import': \"url('https://fonts.googleapis.com/css2?family=Orbitron:wght@400;500;600;700&display=swap')\"\n        }\n      }\n    }\n  });\n  const toggleTheme = () => {\n    setDarkMode(!darkMode);\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      darkMode,\n      toggleTheme\n    },\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeContextProvider, \"gCxui6dqd2KWdgBDHXaJEfwdgc4=\");\n_c = ThemeContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeContextProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","createTheme","ThemeProvider","jsxDEV","_jsxDEV","ThemeContext","ThemeContextProvider","children","_s","darkMode","setDarkMode","savedMode","localStorage","getItem","JSON","parse","setItem","stringify","theme","palette","type","primary","main","secondary","background","default","paper","typography","fontFamily","overrides","MuiCssBaseline","toggleTheme","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/GitHub/BiometricAttendence-Presence/frontend/src/contexts/ThemeContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport { createTheme, ThemeProvider } from '@material-ui/core/styles';\n\nexport const ThemeContext = createContext();\n\nexport const ThemeContextProvider = ({ children }) => {\n  const [darkMode, setDarkMode] = useState(() => {\n    const savedMode = localStorage.getItem('darkMode');\n    return savedMode ? JSON.parse(savedMode) : true;\n  });\n\n  useEffect(() => {\n    localStorage.setItem('darkMode', JSON.stringify(darkMode));\n  }, [darkMode]);\n\n  const theme = createTheme({\n    palette: {\n      type: darkMode ? 'dark' : 'light',\n      primary: {\n        main: '#2196F3',\n      },\n      secondary: {\n        main: '#1976d2',\n      },\n      background: {\n        default: darkMode ? '#1a1a2e' : '#e3f2fd',\n        paper: darkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(255, 255, 255, 0.9)',\n      },\n    },\n    typography: {\n      fontFamily: \"'Roboto', 'Orbitron', sans-serif\",\n    },\n    overrides: {\n      MuiCssBaseline: {\n        '@global': {\n          '@import': \"url('https://fonts.googleapis.com/css2?family=Orbitron:wght@400;500;600;700&display=swap')\",\n        },\n      },\n    },\n  });\n\n  const toggleTheme = () => {\n    setDarkMode(!darkMode);\n  };\n\n  return (\n    <ThemeContext.Provider value={{ darkMode, toggleTheme }}>\n      <ThemeProvider theme={theme}>\n        {children}\n      </ThemeProvider>\n    </ThemeContext.Provider>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,SAASC,WAAW,EAAEC,aAAa,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtE,OAAO,MAAMC,YAAY,gBAAGP,aAAa,CAAC,CAAC;AAE3C,OAAO,MAAMQ,oBAAoB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACpD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,MAAM;IAC7C,MAAMY,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IAClD,OAAOF,SAAS,GAAGG,IAAI,CAACC,KAAK,CAACJ,SAAS,CAAC,GAAG,IAAI;EACjD,CAAC,CAAC;EAEFX,SAAS,CAAC,MAAM;IACdY,YAAY,CAACI,OAAO,CAAC,UAAU,EAAEF,IAAI,CAACG,SAAS,CAACR,QAAQ,CAAC,CAAC;EAC5D,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,MAAMS,KAAK,GAAGjB,WAAW,CAAC;IACxBkB,OAAO,EAAE;MACPC,IAAI,EAAEX,QAAQ,GAAG,MAAM,GAAG,OAAO;MACjCY,OAAO,EAAE;QACPC,IAAI,EAAE;MACR,CAAC;MACDC,SAAS,EAAE;QACTD,IAAI,EAAE;MACR,CAAC;MACDE,UAAU,EAAE;QACVC,OAAO,EAAEhB,QAAQ,GAAG,SAAS,GAAG,SAAS;QACzCiB,KAAK,EAAEjB,QAAQ,GAAG,0BAA0B,GAAG;MACjD;IACF,CAAC;IACDkB,UAAU,EAAE;MACVC,UAAU,EAAE;IACd,CAAC;IACDC,SAAS,EAAE;MACTC,cAAc,EAAE;QACd,SAAS,EAAE;UACT,SAAS,EAAE;QACb;MACF;IACF;EACF,CAAC,CAAC;EAEF,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxBrB,WAAW,CAAC,CAACD,QAAQ,CAAC;EACxB,CAAC;EAED,oBACEL,OAAA,CAACC,YAAY,CAAC2B,QAAQ;IAACC,KAAK,EAAE;MAAExB,QAAQ;MAAEsB;IAAY,CAAE;IAAAxB,QAAA,eACtDH,OAAA,CAACF,aAAa;MAACgB,KAAK,EAAEA,KAAM;MAAAX,QAAA,EACzBA;IAAQ;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAE5B,CAAC;AAAC7B,EAAA,CA/CWF,oBAAoB;AAAAgC,EAAA,GAApBhC,oBAAoB;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}