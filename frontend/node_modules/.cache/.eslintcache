[{"D:\\GitHub\\BiometricAttendence-Presence\\frontend\\src\\index.js":"1","D:\\GitHub\\BiometricAttendence-Presence\\frontend\\src\\App.js":"2","D:\\GitHub\\BiometricAttendence-Presence\\frontend\\src\\components\\Navbar.js":"3","D:\\GitHub\\BiometricAttendence-Presence\\frontend\\src\\components\\Dashboard.js":"4","D:\\GitHub\\BiometricAttendence-Presence\\frontend\\src\\components\\FaceRecognition.js":"5","D:\\GitHub\\BiometricAttendence-Presence\\frontend\\src\\components\\Registration.js":"6","D:\\GitHub\\BiometricAttendence-Presence\\frontend\\src\\components\\QRScanner.js":"7","D:\\GitHub\\BiometricAttendence-Presence\\frontend\\src\\contexts\\ThemeContext.js":"8"},{"size":197,"mtime":1742375155615,"results":"9","hashOfConfig":"10"},{"size":1028,"mtime":1742398722555,"results":"11","hashOfConfig":"10"},{"size":4208,"mtime":1742374963391,"results":"12","hashOfConfig":"10"},{"size":10410,"mtime":1742398313209,"results":"13","hashOfConfig":"10"},{"size":4778,"mtime":1742394396355,"results":"14","hashOfConfig":"10"},{"size":6132,"mtime":1742374984831,"results":"15","hashOfConfig":"10"},{"size":2878,"mtime":1742375253368,"results":"16","hashOfConfig":"10"},{"size":1413,"mtime":1742398344862,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"b2u9nr",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\GitHub\\BiometricAttendence-Presence\\frontend\\src\\index.js",[],["36","37"],"D:\\GitHub\\BiometricAttendence-Presence\\frontend\\src\\App.js",[],"D:\\GitHub\\BiometricAttendence-Presence\\frontend\\src\\components\\Navbar.js",[],"D:\\GitHub\\BiometricAttendence-Presence\\frontend\\src\\components\\Dashboard.js",[],"D:\\GitHub\\BiometricAttendence-Presence\\frontend\\src\\components\\FaceRecognition.js",[],"D:\\GitHub\\BiometricAttendence-Presence\\frontend\\src\\components\\Registration.js",["38"],"import React from 'react';\nimport {\n  Container,\n  Paper,\n  Typography,\n  TextField,\n  Button,\n  makeStyles,\n  Grid\n} from '@material-ui/core';\nimport { PersonAdd } from '@material-ui/icons';\nimport Webcam from 'react-webcam';\nimport axios from 'axios';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    minHeight: '100vh',\n    background: theme.palette.type === 'dark' \n      ? 'linear-gradient(45deg, #000428 30%, #004e92 90%)'\n      : 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\n    transition: 'background 0.3s ease-in-out',\n  },\n  paper: {\n    padding: theme.spacing(3),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    width: '100%',\n    maxWidth: '500px',\n    background: theme.palette.type === 'dark' \n      ? 'rgba(18, 18, 18, 0.8)'\n      : 'rgba(255, 255, 255, 0.9)',\n    backdropFilter: 'blur(10px)',\n    border: theme.palette.type === 'dark'\n      ? '1px solid rgba(81, 81, 81, 0.3)'\n      : '1px solid rgba(255, 255, 255, 0.3)',\n    borderRadius: '15px',\n    boxShadow: theme.palette.type === 'dark'\n      ? '0 8px 32px 0 rgba(0, 0, 0, 0.37)'\n      : '0 8px 32px 0 rgba(31, 38, 135, 0.37)',\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n  webcam: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    width: '100%',\n    borderRadius: '10px',\n    border: `2px solid ${theme.palette.primary.main}`,\n    boxShadow: `0 0 20px ${theme.palette.primary.main}40`,\n  },\n  button: {\n    margin: theme.spacing(2, 0),\n    background: theme.palette.type === 'dark'\n      ? 'linear-gradient(45deg, #FF0080 30%, #FF8C00 90%)'\n      : 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\n    color: '#fff',\n    textTransform: 'none',\n    fontSize: '1.1rem',\n    padding: '12px',\n    borderRadius: '10px',\n    '&:hover': {\n      background: theme.palette.type === 'dark'\n        ? 'linear-gradient(45deg, #FF8C00 30%, #FF0080 90%)'\n        : 'linear-gradient(45deg, #21CBF3 30%, #2196F3 90%)',\n      boxShadow: '0 3px 15px 2px rgba(255, 105, 135, .3)',\n    },\n  },\n  textField: {\n    marginBottom: theme.spacing(2),\n    '& .MuiOutlinedInput-root': {\n      borderRadius: '10px',\n      background: theme.palette.type === 'dark'\n        ? 'rgba(255, 255, 255, 0.05)'\n        : 'rgba(0, 0, 0, 0.05)',\n      '&:hover': {\n        '& .MuiOutlinedInput-notchedOutline': {\n          borderColor: theme.palette.primary.main,\n        },\n      },\n    },\n    '& .MuiOutlinedInput-notchedOutline': {\n      borderWidth: '2px',\n      borderColor: theme.palette.type === 'dark'\n        ? 'rgba(255, 255, 255, 0.2)'\n        : 'rgba(0, 0, 0, 0.2)',\n    },\n  },\n  title: {\n    color: theme.palette.primary.main,\n    fontWeight: 600,\n    textTransform: 'uppercase',\n    letterSpacing: '2px',\n    marginBottom: theme.spacing(3),\n    textShadow: theme.palette.type === 'dark'\n      ? '0 0 10px rgba(255, 0, 128, 0.5)'\n      : '0 0 10px rgba(33, 150, 243, 0.5)',\n  },\n}));\n\nconst Registration = () => {\n  const classes = useStyles();\n  const webcamRef = React.createRef(null);\n  const [loading, setLoading] = React.useState(false);\n  const [message, setMessage] = React.useState('');\n  const [formData, setFormData] = React.useState({\n    name: '',\n    employee_id: '',\n  });\n\n  const handleInputChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!formData.name || !formData.employee_id) {\n      setMessage('Please fill in all fields');\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setMessage('');\n\n      const imageSrc = webcamRef.current.getScreenshot();\n      if (!imageSrc) {\n        setMessage('Failed to capture image');\n        return;\n      }\n\n      const response = await axios.post('http://localhost:5000/api/register', {\n        ...formData,\n        face_image: imageSrc,\n      });\n\n      setMessage(response.data.message);\n      setFormData({ name: '', employee_id: '' });\n    } catch (error) {\n      setMessage(error.response?.data?.error || 'An error occurred');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Grid container className={classes.root}>\n      <Container maxWidth=\"sm\">\n        <Paper elevation={3} className={classes.paper}>\n          <Typography variant=\"h4\" className={classes.title}>\n            Employee Registration\n          </Typography>\n\n          <form className={classes.form} onSubmit={handleSubmit}>\n            <TextField\n              className={classes.textField}\n              variant=\"outlined\"\n              required\n              fullWidth\n              label=\"Full Name\"\n              name=\"name\"\n              value={formData.name}\n              onChange={handleInputChange}\n            />\n\n            <TextField\n              className={classes.textField}\n              variant=\"outlined\"\n              required\n              fullWidth\n              label=\"Employee ID\"\n              name=\"employee_id\"\n              value={formData.employee_id}\n              onChange={handleInputChange}\n            />\n\n            <Webcam\n              audio={false}\n              ref={webcamRef}\n              screenshotFormat=\"image/jpeg\"\n              className={classes.webcam}\n            />\n\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              className={classes.button}\n              disabled={loading}\n            >\n              {loading ? 'Loading...' : 'Register Employee'}\n            </Button>\n          </form>\n\n          {message && (\n            <Typography \n              style={{\n                color: message.includes('error') \n                  ? 'red'\n                  : 'green',\n                marginTop: '10px',\n                textAlign: 'center',\n                fontWeight: 500,\n              }}\n            >\n              {message}\n            </Typography>\n          )}\n        </Paper>\n      </Container>\n    </Grid>\n  );\n};\n\nexport default Registration;\n","D:\\GitHub\\BiometricAttendence-Presence\\frontend\\src\\components\\QRScanner.js",[],"D:\\GitHub\\BiometricAttendence-Presence\\frontend\\src\\contexts\\ThemeContext.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":11,"column":10,"nodeType":"45","messageId":"46","endLine":11,"endColumn":19},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'PersonAdd' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]