[{"D:\\GitHub\\BiometricAttendence-Presence\\frontend\\src\\index.js":"1","D:\\GitHub\\BiometricAttendence-Presence\\frontend\\src\\App.js":"2","D:\\GitHub\\BiometricAttendence-Presence\\frontend\\src\\components\\Navbar.js":"3","D:\\GitHub\\BiometricAttendence-Presence\\frontend\\src\\components\\Dashboard.js":"4","D:\\GitHub\\BiometricAttendence-Presence\\frontend\\src\\components\\FaceRecognition.js":"5","D:\\GitHub\\BiometricAttendence-Presence\\frontend\\src\\components\\Registration.js":"6","D:\\GitHub\\BiometricAttendence-Presence\\frontend\\src\\components\\QRScanner.js":"7"},{"size":197,"mtime":1742375155615,"results":"8","hashOfConfig":"9"},{"size":4967,"mtime":1742315862574,"results":"10","hashOfConfig":"9"},{"size":4208,"mtime":1742374963391,"results":"11","hashOfConfig":"9"},{"size":12637,"mtime":1742394710996,"results":"12","hashOfConfig":"9"},{"size":4778,"mtime":1742394396355,"results":"13","hashOfConfig":"9"},{"size":6132,"mtime":1742374984831,"results":"14","hashOfConfig":"9"},{"size":2878,"mtime":1742375253368,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"b2u9nr",{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"D:\\GitHub\\BiometricAttendence-Presence\\frontend\\src\\index.js",[],["33","34"],"D:\\GitHub\\BiometricAttendence-Presence\\frontend\\src\\App.js",[],"D:\\GitHub\\BiometricAttendence-Presence\\frontend\\src\\components\\Navbar.js",[],"D:\\GitHub\\BiometricAttendence-Presence\\frontend\\src\\components\\Dashboard.js",["35","36","37","38","39","40","41","42"],"import React, { useState, useEffect } from 'react';\nimport { \n  Container, \n  Grid, \n  Paper, \n  Typography, \n  makeStyles,\n  Card,\n  CardContent,\n  Button,\n  Box,\n  useTheme,\n  IconButton,\n  Tooltip,\n  Zoom,\n  CircularProgress,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from '@material-ui/core';\nimport { \n  Face as FaceIcon,\n  CropFree as QrCodeIcon,\n  PersonAdd as PersonAddIcon,\n  LocationOn as LocationIcon,\n  Timeline as TimelineIcon,\n  Group as GroupIcon,\n  Settings as SettingsIcon,\n  Help as HelpIcon,\n  TrendingUp as TrendingUpIcon,\n  People as PeopleIcon\n} from '@material-ui/icons';\nimport { useHistory } from 'react-router-dom';\nimport { motion } from 'framer-motion';\nimport { Line } from 'react-chartjs-2';\nimport axios from 'axios';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    minHeight: 'calc(100vh - 64px)',\n    padding: theme.spacing(4),\n    background: 'linear-gradient(135deg, #1a1a2e 0%, #16213e 100%)',\n    position: 'relative',\n    overflow: 'hidden',\n    '&::before': {\n      content: '\"\"',\n      position: 'absolute',\n      width: '200%',\n      height: '200%',\n      background: `repeating-linear-gradient(\n        transparent 0,\n        rgba(32, 43, 67, 0.3) 2px,\n        transparent 4px\n      )`,\n      animation: '$gridMove 20s linear infinite',\n    }\n  },\n  '@keyframes gridMove': {\n    '0%': {\n      transform: 'translate(-50%, -50%) rotate(0deg)',\n    },\n    '100%': {\n      transform: 'translate(-50%, -50%) rotate(360deg)',\n    },\n  },\n  container: {\n    position: 'relative',\n    zIndex: 1,\n  },\n  paper: {\n    padding: theme.spacing(4),\n    textAlign: 'center',\n    background: 'rgba(255, 255, 255, 0.1)',\n    backdropFilter: 'blur(10px)',\n    border: '1px solid rgba(255, 255, 255, 0.1)',\n    borderRadius: '20px',\n    boxShadow: '0 8px 32px 0 rgba(31, 38, 135, 0.37)',\n  },\n  welcomeTitle: {\n    color: '#ffffff',\n    fontWeight: 800,\n    letterSpacing: '0.1em',\n    textTransform: 'uppercase',\n    marginBottom: theme.spacing(1),\n    textShadow: '0 0 10px rgba(33, 150, 243, 0.5)',\n    fontFamily: \"'Orbitron', sans-serif\",\n  },\n  subtitle: {\n    color: 'rgba(255, 255, 255, 0.7)',\n    marginBottom: theme.spacing(4),\n    fontFamily: \"'Rajdhani', sans-serif\",\n  },\n  card: {\n    height: '100%',\n    background: 'rgba(255, 255, 255, 0.1)',\n    backdropFilter: 'blur(10px)',\n    border: '1px solid rgba(255, 255, 255, 0.1)',\n    borderRadius: '15px',\n    transition: 'all 0.3s ease-in-out',\n    '&:hover': {\n      transform: 'translateY(-8px)',\n      boxShadow: '0 8px 30px rgba(33, 150, 243, 0.3)',\n    },\n  },\n  cardContent: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: theme.spacing(3),\n  },\n  icon: {\n    fontSize: 48,\n    marginBottom: theme.spacing(2),\n    color: '#2196F3',\n    filter: 'drop-shadow(0 0 8px rgba(33, 150, 243, 0.5))',\n  },\n  statsCard: {\n    background: 'rgba(255, 255, 255, 0.1)',\n    backdropFilter: 'blur(10px)',\n    borderRadius: '15px',\n    padding: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n  },\n  statValue: {\n    fontSize: '2rem',\n    fontWeight: 'bold',\n    color: '#2196F3',\n    textShadow: '0 0 10px rgba(33, 150, 243, 0.3)',\n  },\n  statLabel: {\n    color: 'rgba(255, 255, 255, 0.7)',\n    fontSize: '1rem',\n  },\n  tableContainer: {\n    background: 'rgba(255, 255, 255, 0.1)',\n    backdropFilter: 'blur(10px)',\n    borderRadius: '15px',\n    marginTop: theme.spacing(3),\n  },\n  tableCell: {\n    color: 'rgba(255, 255, 255, 0.7)',\n    borderBottom: '1px solid rgba(255, 255, 255, 0.1)',\n  },\n  tableHeader: {\n    color: '#ffffff',\n    fontWeight: 'bold',\n    borderBottom: '2px solid rgba(33, 150, 243, 0.5)',\n  },\n}));\n\nconst Dashboard = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [loading, setLoading] = useState(true);\n  const [stats, setStats] = useState({\n    totalEmployees: 0,\n    presentToday: 0,\n    averageAttendance: 0,\n  });\n  const [attendanceData, setAttendanceData] = useState({\n    labels: [],\n    datasets: [],\n  });\n  const [recentActivity, setRecentActivity] = useState([]);\n\n  useEffect(() => {\n    const fetchDashboardData = async () => {\n      try {\n        // Fetch statistics\n        const statsResponse = await axios.get('http://localhost:5000/api/analytics/stats');\n        setStats(statsResponse.data);\n\n        // Fetch attendance trend data\n        const trendResponse = await axios.get('http://localhost:5000/api/analytics/attendance-trend');\n        setAttendanceData({\n          labels: trendResponse.data.dates,\n          datasets: [{\n            label: 'Daily Attendance',\n            data: trendResponse.data.counts,\n            fill: false,\n            borderColor: '#2196F3',\n            tension: 0.4,\n          }],\n        });\n\n        // Fetch recent activity\n        const activityResponse = await axios.get('http://localhost:5000/api/analytics/recent-activity');\n        setRecentActivity(activityResponse.data);\n\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching dashboard data:', error);\n        setLoading(false);\n      }\n    };\n\n    fetchDashboardData();\n  }, []);\n\n  const navigateTo = (path) => {\n    history.push(path);\n  };\n\n  if (loading) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"100vh\">\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  return (\n    <motion.div\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      transition={{ duration: 0.5 }}\n      className={classes.root}\n    >\n      <Container maxWidth=\"lg\" className={classes.container}>\n        <Grid container spacing={4}>\n          {/* Welcome Section */}\n          <Grid item xs={12}>\n            <Paper className={classes.paper}>\n              <Typography variant=\"h4\" className={classes.welcomeTitle}>\n                Biometric Attendance Dashboard\n              </Typography>\n              <Typography variant=\"subtitle1\" className={classes.subtitle}>\n                Monitor your workforce attendance in real-time\n              </Typography>\n            </Paper>\n          </Grid>\n\n          {/* Statistics Cards */}\n          <Grid item xs={12} md={4}>\n            <motion.div whileHover={{ scale: 1.02 }}>\n              <Card className={classes.statsCard}>\n                <CardContent>\n                  <PeopleIcon className={classes.icon} />\n                  <Typography className={classes.statValue}>{stats.totalEmployees}</Typography>\n                  <Typography className={classes.statLabel}>Total Employees</Typography>\n                </CardContent>\n              </Card>\n            </motion.div>\n          </Grid>\n\n          <Grid item xs={12} md={4}>\n            <motion.div whileHover={{ scale: 1.02 }}>\n              <Card className={classes.statsCard}>\n                <CardContent>\n                  <TrendingUpIcon className={classes.icon} />\n                  <Typography className={classes.statValue}>{stats.presentToday}</Typography>\n                  <Typography className={classes.statLabel}>Present Today</Typography>\n                </CardContent>\n              </Card>\n            </motion.div>\n          </Grid>\n\n          <Grid item xs={12} md={4}>\n            <motion.div whileHover={{ scale: 1.02 }}>\n              <Card className={classes.statsCard}>\n                <CardContent>\n                  <TimelineIcon className={classes.icon} />\n                  <Typography className={classes.statValue}>{stats.averageAttendance}%</Typography>\n                  <Typography className={classes.statLabel}>Average Attendance</Typography>\n                </CardContent>\n              </Card>\n            </motion.div>\n          </Grid>\n\n          {/* Attendance Chart */}\n          <Grid item xs={12}>\n            <Paper className={classes.paper}>\n              <Typography variant=\"h6\" className={classes.subtitle}>\n                Attendance Trend\n              </Typography>\n              <Line data={attendanceData} options={{\n                responsive: true,\n                scales: {\n                  y: {\n                    beginAtZero: true,\n                    grid: {\n                      color: 'rgba(255, 255, 255, 0.1)',\n                    },\n                    ticks: {\n                      color: 'rgba(255, 255, 255, 0.7)',\n                    }\n                  },\n                  x: {\n                    grid: {\n                      color: 'rgba(255, 255, 255, 0.1)',\n                    },\n                    ticks: {\n                      color: 'rgba(255, 255, 255, 0.7)',\n                    }\n                  }\n                },\n                plugins: {\n                  legend: {\n                    labels: {\n                      color: 'rgba(255, 255, 255, 0.7)',\n                    }\n                  }\n                }\n              }} />\n            </Paper>\n          </Grid>\n\n          {/* Recent Activity Table */}\n          <Grid item xs={12}>\n            <TableContainer className={classes.tableContainer}>\n              <Typography variant=\"h6\" className={classes.subtitle} style={{ padding: '16px' }}>\n                Recent Activity\n              </Typography>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell className={classes.tableHeader}>Employee</TableCell>\n                    <TableCell className={classes.tableHeader}>Action</TableCell>\n                    <TableCell className={classes.tableHeader}>Time</TableCell>\n                    <TableCell className={classes.tableHeader}>Location</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {recentActivity.map((activity, index) => (\n                    <TableRow key={index}>\n                      <TableCell className={classes.tableCell}>{activity.employee}</TableCell>\n                      <TableCell className={classes.tableCell}>{activity.action}</TableCell>\n                      <TableCell className={classes.tableCell}>{activity.time}</TableCell>\n                      <TableCell className={classes.tableCell}>{activity.location}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Grid>\n\n          {/* Quick Actions */}\n          <Grid item xs={12}>\n            <Grid container spacing={3}>\n              <Grid item xs={12} sm={6} md={3}>\n                <motion.div whileHover={{ scale: 1.05 }}>\n                  <Card className={classes.card} onClick={() => navigateTo('/face-recognition')}>\n                    <CardContent className={classes.cardContent}>\n                      <FaceIcon className={classes.icon} />\n                      <Typography>Face Recognition</Typography>\n                    </CardContent>\n                  </Card>\n                </motion.div>\n              </Grid>\n              <Grid item xs={12} sm={6} md={3}>\n                <motion.div whileHover={{ scale: 1.05 }}>\n                  <Card className={classes.card} onClick={() => navigateTo('/qr-scanner')}>\n                    <CardContent className={classes.cardContent}>\n                      <QrCodeIcon className={classes.icon} />\n                      <Typography>QR Scanner</Typography>\n                    </CardContent>\n                  </Card>\n                </motion.div>\n              </Grid>\n              <Grid item xs={12} sm={6} md={3}>\n                <motion.div whileHover={{ scale: 1.05 }}>\n                  <Card className={classes.card} onClick={() => navigateTo('/team-management')}>\n                    <CardContent className={classes.cardContent}>\n                      <GroupIcon className={classes.icon} />\n                      <Typography>Team Management</Typography>\n                    </CardContent>\n                  </Card>\n                </motion.div>\n              </Grid>\n              <Grid item xs={12} sm={6} md={3}>\n                <motion.div whileHover={{ scale: 1.05 }}>\n                  <Card className={classes.card} onClick={() => navigateTo('/registration')}>\n                    <CardContent className={classes.cardContent}>\n                      <PersonAddIcon className={classes.icon} />\n                      <Typography>New Registration</Typography>\n                    </CardContent>\n                  </Card>\n                </motion.div>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Container>\n    </motion.div>\n  );\n};\n\nexport default Dashboard;\n","D:\\GitHub\\BiometricAttendence-Presence\\frontend\\src\\components\\FaceRecognition.js",[],"D:\\GitHub\\BiometricAttendence-Presence\\frontend\\src\\components\\Registration.js",["43"],"import React from 'react';\nimport {\n  Container,\n  Paper,\n  Typography,\n  TextField,\n  Button,\n  makeStyles,\n  Grid\n} from '@material-ui/core';\nimport { PersonAdd } from '@material-ui/icons';\nimport Webcam from 'react-webcam';\nimport axios from 'axios';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    minHeight: '100vh',\n    background: theme.palette.type === 'dark' \n      ? 'linear-gradient(45deg, #000428 30%, #004e92 90%)'\n      : 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\n    transition: 'background 0.3s ease-in-out',\n  },\n  paper: {\n    padding: theme.spacing(3),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    width: '100%',\n    maxWidth: '500px',\n    background: theme.palette.type === 'dark' \n      ? 'rgba(18, 18, 18, 0.8)'\n      : 'rgba(255, 255, 255, 0.9)',\n    backdropFilter: 'blur(10px)',\n    border: theme.palette.type === 'dark'\n      ? '1px solid rgba(81, 81, 81, 0.3)'\n      : '1px solid rgba(255, 255, 255, 0.3)',\n    borderRadius: '15px',\n    boxShadow: theme.palette.type === 'dark'\n      ? '0 8px 32px 0 rgba(0, 0, 0, 0.37)'\n      : '0 8px 32px 0 rgba(31, 38, 135, 0.37)',\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n  webcam: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    width: '100%',\n    borderRadius: '10px',\n    border: `2px solid ${theme.palette.primary.main}`,\n    boxShadow: `0 0 20px ${theme.palette.primary.main}40`,\n  },\n  button: {\n    margin: theme.spacing(2, 0),\n    background: theme.palette.type === 'dark'\n      ? 'linear-gradient(45deg, #FF0080 30%, #FF8C00 90%)'\n      : 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\n    color: '#fff',\n    textTransform: 'none',\n    fontSize: '1.1rem',\n    padding: '12px',\n    borderRadius: '10px',\n    '&:hover': {\n      background: theme.palette.type === 'dark'\n        ? 'linear-gradient(45deg, #FF8C00 30%, #FF0080 90%)'\n        : 'linear-gradient(45deg, #21CBF3 30%, #2196F3 90%)',\n      boxShadow: '0 3px 15px 2px rgba(255, 105, 135, .3)',\n    },\n  },\n  textField: {\n    marginBottom: theme.spacing(2),\n    '& .MuiOutlinedInput-root': {\n      borderRadius: '10px',\n      background: theme.palette.type === 'dark'\n        ? 'rgba(255, 255, 255, 0.05)'\n        : 'rgba(0, 0, 0, 0.05)',\n      '&:hover': {\n        '& .MuiOutlinedInput-notchedOutline': {\n          borderColor: theme.palette.primary.main,\n        },\n      },\n    },\n    '& .MuiOutlinedInput-notchedOutline': {\n      borderWidth: '2px',\n      borderColor: theme.palette.type === 'dark'\n        ? 'rgba(255, 255, 255, 0.2)'\n        : 'rgba(0, 0, 0, 0.2)',\n    },\n  },\n  title: {\n    color: theme.palette.primary.main,\n    fontWeight: 600,\n    textTransform: 'uppercase',\n    letterSpacing: '2px',\n    marginBottom: theme.spacing(3),\n    textShadow: theme.palette.type === 'dark'\n      ? '0 0 10px rgba(255, 0, 128, 0.5)'\n      : '0 0 10px rgba(33, 150, 243, 0.5)',\n  },\n}));\n\nconst Registration = () => {\n  const classes = useStyles();\n  const webcamRef = React.createRef(null);\n  const [loading, setLoading] = React.useState(false);\n  const [message, setMessage] = React.useState('');\n  const [formData, setFormData] = React.useState({\n    name: '',\n    employee_id: '',\n  });\n\n  const handleInputChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!formData.name || !formData.employee_id) {\n      setMessage('Please fill in all fields');\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setMessage('');\n\n      const imageSrc = webcamRef.current.getScreenshot();\n      if (!imageSrc) {\n        setMessage('Failed to capture image');\n        return;\n      }\n\n      const response = await axios.post('http://localhost:5000/api/register', {\n        ...formData,\n        face_image: imageSrc,\n      });\n\n      setMessage(response.data.message);\n      setFormData({ name: '', employee_id: '' });\n    } catch (error) {\n      setMessage(error.response?.data?.error || 'An error occurred');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Grid container className={classes.root}>\n      <Container maxWidth=\"sm\">\n        <Paper elevation={3} className={classes.paper}>\n          <Typography variant=\"h4\" className={classes.title}>\n            Employee Registration\n          </Typography>\n\n          <form className={classes.form} onSubmit={handleSubmit}>\n            <TextField\n              className={classes.textField}\n              variant=\"outlined\"\n              required\n              fullWidth\n              label=\"Full Name\"\n              name=\"name\"\n              value={formData.name}\n              onChange={handleInputChange}\n            />\n\n            <TextField\n              className={classes.textField}\n              variant=\"outlined\"\n              required\n              fullWidth\n              label=\"Employee ID\"\n              name=\"employee_id\"\n              value={formData.employee_id}\n              onChange={handleInputChange}\n            />\n\n            <Webcam\n              audio={false}\n              ref={webcamRef}\n              screenshotFormat=\"image/jpeg\"\n              className={classes.webcam}\n            />\n\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              className={classes.button}\n              disabled={loading}\n            >\n              {loading ? 'Loading...' : 'Register Employee'}\n            </Button>\n          </form>\n\n          {message && (\n            <Typography \n              style={{\n                color: message.includes('error') \n                  ? 'red'\n                  : 'green',\n                marginTop: '10px',\n                textAlign: 'center',\n                fontWeight: 500,\n              }}\n            >\n              {message}\n            </Typography>\n          )}\n        </Paper>\n      </Container>\n    </Grid>\n  );\n};\n\nexport default Registration;\n","D:\\GitHub\\BiometricAttendence-Presence\\frontend\\src\\components\\QRScanner.js",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":10,"column":3,"nodeType":"50","messageId":"51","endLine":10,"endColumn":9},{"ruleId":"48","severity":1,"message":"52","line":12,"column":3,"nodeType":"50","messageId":"51","endLine":12,"endColumn":11},{"ruleId":"48","severity":1,"message":"53","line":13,"column":3,"nodeType":"50","messageId":"51","endLine":13,"endColumn":13},{"ruleId":"48","severity":1,"message":"54","line":14,"column":3,"nodeType":"50","messageId":"51","endLine":14,"endColumn":10},{"ruleId":"48","severity":1,"message":"55","line":15,"column":3,"nodeType":"50","messageId":"51","endLine":15,"endColumn":7},{"ruleId":"48","severity":1,"message":"56","line":28,"column":17,"nodeType":"50","messageId":"51","endLine":28,"endColumn":29},{"ruleId":"48","severity":1,"message":"57","line":31,"column":15,"nodeType":"50","messageId":"51","endLine":31,"endColumn":27},{"ruleId":"48","severity":1,"message":"58","line":32,"column":11,"nodeType":"50","messageId":"51","endLine":32,"endColumn":19},{"ruleId":"48","severity":1,"message":"59","line":11,"column":10,"nodeType":"50","messageId":"51","endLine":11,"endColumn":19},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'useTheme' is defined but never used.","'IconButton' is defined but never used.","'Tooltip' is defined but never used.","'Zoom' is defined but never used.","'LocationIcon' is defined but never used.","'SettingsIcon' is defined but never used.","'HelpIcon' is defined but never used.","'PersonAdd' is defined but never used.","no-global-assign","no-unsafe-negation"]